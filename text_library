import datetime
from pkgutil import iter_importers
import ast
from email.utils import format_datetime


book_info = ["索引", "名称", "地址", "类别", "数量", "价格", "入库时间", "归还时间", "次数", "状态"]
book_info1 = [0, "明朝那些事", "三牌楼", "人文", 1, 22, datetime.datetime(2018, 1, 1), datetime.datetime(2018, 1, 1), 1, "可借"]
book_info2 = [1, "基督山伯爵", "三牌楼", "人文", 1, 22, datetime.datetime(2018, 1, 1), datetime.datetime(2018, 1, 1), 2, "可借"]
book_info3 = [2, "三体", "三牌楼", "人文", 1, 22, datetime.datetime(2018, 1, 1), datetime.datetime(2018, 1, 1), 3, "可借"]

#all_book_info=[book_info,book_info1,book_info2,book_info3]

#如何写输入txt的函数
def add_book(_book_info,mode="a+"):
    f = open(r'lib.txt',mode)#r使其不处理转义字符

    print(_book_info, file=f)
    f.close()
#用gbk解码

#add_book(book_info1)
#add_book(book_info2)
#add_book(book_info3)

#文件更新
def renew_book(_all_books):
#需要索引号：
    for index,_book in enumerate(_all_books):
        if index==0:
            add_book(_book,mode="w+")
        else:
            add_book(_book)
    #add_book(all_book_info,"w+") #w+会覆盖上次信息

#读取整个文件信息:怎么写进去就怎么读出来（只能读符合格式的)
def read_book():
    f = open(r'lib.txt',"r")
    _books_info=f.read() #全部读取 #f.readline()

    #将book_info分割为小字符串
    _books_info_str=_books_info.split("\n")[:-1]#用索引不取最后一个
    #print(type(_books_info))
    _return_info=[]


    for _book in _books_info_str:
        #print(_book)
        #print(type(_book))
        #_return_info.append(eval(_book))#eval将字符串引号去掉变为列表

        _return_info.append(eval(_book))

    #print(_books_info_str)
    #print(type(eval(_books_info.split("\n")[0])))#分割成多个子字符串，并返回一个包含这些子字符串的列表,取出第一个元素,求值（但是最后的分割符会产生一个空列表）

    f.close()

    return _return_info



#add_book(book_info)
while True:
    print("""图书管理系统
            1.添加图书
            2.删除图书
            3.借阅图书
            4.归还图书
            5.查询图书信息
            6.查询马上要归还的书
            7.按照借阅次数排序
            8.退出系统""")

    choice = input('请选择：')
    if choice == '1':
        print("1.添加图书")
        the_add_book = []
        for info in book_info:
            if info in ["索引", "数量", "价格", "次数"]:  # 判断语句的遍历
                put_number = int(input(info + ":"))
                the_add_book.append(put_number)
            elif info in ["入库时间", "归还时间"]:
                # 2018,1,1->datetime.datetime(2018,1,1)
                put_number = input(info + ":(以逗号区分年月日)").split(",")
                the_add_book.append(datetime.datetime(int(put_number[0]), int(put_number[1]), int(put_number[2])))
            else:
                put_txt = input(info + ":")
                the_add_book.append(put_txt)
        add_book(the_add_book)

    elif choice == '2':
        print("2.删除图书")  # 删除：提取出数据，再更改,覆盖
        all_book_info = read_book()
        for _book in all_book_info:
            print(_book[1])
            print('7')
        del_book_name = input("请选择删除的书")
        stay_book = []
        for _book in all_book_info:
            if del_book_name != _book[1]:
                stay_book.append(_book)
        renew_book(stay_book)

    elif choice == '3':
        print("3.借阅图书")
        # 读取所有图书
        all_book_info = read_book()
        # 打印图书
        for _book in all_book_info:
            if "不" not in _book[-1]:
                print(_book[1])

        borrow_book_name = input("你想借哪一本书？")
        for _book in all_book_info:
            if borrow_book_name == _book[1]:
                _book[4] = _book[4] - 1  # 虽是形参，但会影响
                _book[-2] = _book[-2] + 1
                if _book[4] == 0:
                    _book[-1] = '不可借'
        renew_book(all_book_info)

    elif choice == '4':
        print("4.归还图书")
        all_book_info = read_book()
        for _book in all_book_info:
            print(_book[1])

        return_book_name = input("你想借哪一本书？")
        for _book in all_book_info:
            if return_book_name == _book[1]:
                _book[4] = _book[4] + 1  # 虽是形参，但会影响
                if _book[4] == 1:
                    _book[-1] = '可借'
        renew_book(all_book_info)

    elif choice == '5':
        print("5.查询图书信息")
        all_book_info = read_book()
        for _book in all_book_info:
            print(_book[1])
        lookup_book_name = input("你想查询哪一本书？")
        for _book in all_book_info:
            if lookup_book_name == _book[1]:
                print(_book)
        renew_book(all_book_info)

    elif choice == '6':
        print("6.查询马上要归还的图书")
        all_book_info = read_book()
        for _book in all_book_info:
            # datetime.datetime.now()->获取当前日期
            if datetime.datetime.now() - _book[-3] > datetime.timedelta(days=400):  # 两日期间隔400天
                print(_book[1], datetime.datetime.now() - _book[-3])

    elif choice == '7':
        print("7.按照借阅次数排序")
        all_book_info = read_book()
        all_book_info.sort(key=lambda x: x[-2] * -1)  # lambda x:x[-2]*-1 定义了一个匿名函数，它接受一个参数 x（这里 x 代表 all_book_info 列表中的每个子列表），并返回该子列表倒数第二个元素乘以 -1 的结果。
        for _book in all_book_info:
            print(_book[1])
    elif choice == '8':
        print('欢迎下次使用......')
        break
    else:
        print('请输入正确选择')
